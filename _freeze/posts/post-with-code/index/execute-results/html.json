{
  "hash": "e7da9cf4c8707879464ad102603fbc6f",
  "result": {
    "markdown": "---\ntitle: \"Post With Code\"\nauthor: \"Harlow Malloc\"\ndate: \"2022-12-06\"\ncategories: [news, code, analysis]\nimage: \"image.jpg\"\n---\n\n\nThis is a post with executable code. There should be some text before the code. Right here.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\n\n# module UI:\nmod1_ui <- function(id) {\n  ns <- NS(id)\n\n  # ----downloadHandler----\n  tagList(\n    tags$h3(\n      \"We're in mod1 UI\"\n    ),\n\n    downloadButton(ns(\"download_here\"), \"Download\")\n  )\n}\n\n# module server:\nmod1_server <- function(id) {\n  moduleServer(\n    id = id, \n    module = function(input, output, session) {\n      # ----downloadHandler----\n      # Our dataset:\n      data <- mtcars\n\n      output$download_here <- downloadHandler(\n        filename = function() {\n          paste(\"data-\", Sys.Date(), \".csv\", sep=\"\")\n        },\n        content = function(file) {\n          write.csv(data, file)\n        }\n      )\n    }\n  )\n}\n\n# app UI:\nui <- fluidPage(\n  mod1_ui(id = \"thismod\")\n)\n\n# app server:\nserver <- function(input, output, session) {\n  # Get return value from module server:\n  k <- mod1_server(id = \"thismod\")\n\n  # Observe changes in the return value:\n  observeEvent(k(), {\n    print(\"Didn't I throw an error!?\")\n  })\n}\n\nshinyApp(ui, server)\n```\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}